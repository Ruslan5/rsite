{"ast":null,"code":"var _jsxFileName = \"/home/r/ideaproject/react/r-site/src/components/About/index.js\";\nimport React from 'react';\nimport Tree from 'react-d3-tree';\nimport data from \"./data\";\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  const getDynamicPathClass = (_ref, orientation) => {\n    let {\n      source,\n      target\n    } = _ref;\n\n    if (!target.children) {\n      // Target node has no children -> this link leads to a leaf node.\n      return 'link__to-leaf';\n    } // Style it as a link connecting two branch nodes by default.\n\n\n    return 'link__to-branch';\n  };\n\n  const straightPathFunc = (linkDatum, orientation) => {\n    const {\n      source,\n      target\n    } = linkDatum;\n    return orientation === 'horizontal' ? `M${source.y},${source.x}L${target.y},${target.x}` : `M${source.x},${source.y}L${target.x},${target.y}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tree, {\n    data: data // Statically apply same className(s) to all links\n    ,\n    pathFunc: straightPathFunc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","Tree","data","About","getDynamicPathClass","orientation","source","target","children","straightPathFunc","linkDatum","y","x"],"sources":["/home/r/ideaproject/react/r-site/src/components/About/index.js"],"sourcesContent":["import React from 'react';\nimport Tree from 'react-d3-tree';\nimport data from \"./data\";\nimport './index.scss'\n\nconst About = () => {\n    const getDynamicPathClass = ({ source, target }, orientation) => {\n        if (!target.children) {\n            // Target node has no children -> this link leads to a leaf node.\n            return 'link__to-leaf';\n        }\n\n        // Style it as a link connecting two branch nodes by default.\n        return 'link__to-branch';\n    };\n\n    const straightPathFunc = (linkDatum, orientation) => {\n        const { source, target } = linkDatum;\n        return orientation === 'horizontal'\n            ? `M${source.y},${source.x}L${target.y},${target.x}`\n            : `M${source.x},${source.y}L${target.x},${target.y}`;\n    };\n\n    return (\n        <Tree\n            data={data}\n            // Statically apply same className(s) to all links\n            pathFunc={straightPathFunc}\n        />\n    );\n}\n\nexport default About"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,cAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAChB,MAAMC,mBAAmB,GAAG,OAAqBC,WAArB,KAAqC;IAAA,IAApC;MAAEC,MAAF;MAAUC;IAAV,CAAoC;;IAC7D,IAAI,CAACA,MAAM,CAACC,QAAZ,EAAsB;MAClB;MACA,OAAO,eAAP;IACH,CAJ4D,CAM7D;;;IACA,OAAO,iBAAP;EACH,CARD;;EAUA,MAAMC,gBAAgB,GAAG,CAACC,SAAD,EAAYL,WAAZ,KAA4B;IACjD,MAAM;MAAEC,MAAF;MAAUC;IAAV,IAAqBG,SAA3B;IACA,OAAOL,WAAW,KAAK,YAAhB,GACA,IAAGC,MAAM,CAACK,CAAE,IAAGL,MAAM,CAACM,CAAE,IAAGL,MAAM,CAACI,CAAE,IAAGJ,MAAM,CAACK,CAAE,EADhD,GAEA,IAAGN,MAAM,CAACM,CAAE,IAAGN,MAAM,CAACK,CAAE,IAAGJ,MAAM,CAACK,CAAE,IAAGL,MAAM,CAACI,CAAE,EAFvD;EAGH,CALD;;EAOA,oBACI,QAAC,IAAD;IACI,IAAI,EAAET,IADV,CAEI;IAFJ;IAGI,QAAQ,EAAEO;EAHd;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAzBD;;KAAMN,K;AA2BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
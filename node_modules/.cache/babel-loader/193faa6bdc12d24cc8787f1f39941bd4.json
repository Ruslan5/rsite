{"ast":null,"code":"var _jsxFileName = \"/home/r/ideaproject/react/r-site/src/components/Product/index.js\";\nimport clone from 'clone';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AnimatedTree } from 'react-tree-graph';\nimport { setActiveNode } from '../Reducers/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TreeContainer extends React.PureComponent {\n  handleClick(event, node) {\n    setActiveNode(node);\n  }\n\n  getRoot(json) {\n    if (json.name === this.props.activeNode) {\n      return json;\n    }\n\n    for (let i = 0; i < ((_json$children = json.children) === null || _json$children === void 0 ? void 0 : _json$children.length); i++) {\n      var _json$children;\n\n      const childJson = this.getRoot(json.children[i]);\n\n      if (childJson) {\n        return childJson;\n      }\n    }\n\n    return false;\n  }\n\n  buildSubTree(root) {\n    let newChildren = [];\n\n    for (let i = 0; i < ((_root$children = root.children) === null || _root$children === void 0 ? void 0 : _root$children.length); i++) {\n      var _root$children;\n\n      const child = this.buildSubTree(root.children[i]);\n\n      if (child) {\n        newChildren.push(child);\n      }\n    }\n\n    if (newChildren.length > 0) {\n      root.children = newChildren;\n    }\n\n    if (newChildren.length > 0 || root.name.toLowerCase().indexOf(this.props.filter.toLowerCase()) !== -1) {\n      return root;\n    }\n\n    return null;\n  }\n\n  setClassName(node) {\n    var _node$children;\n\n    (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.forEach(this.setClassName, this);\n\n    if (!this.props.filter) {\n      return;\n    }\n\n    node.className = node.name.toLowerCase().indexOf(this.props.filter) === -1 ? 'node searchExcluded' : 'node searchIncluded';\n  }\n\n  render() {\n    let root = this.props.activeNode ? this.getRoot(this.props.data) : this.props.data;\n    root = clone(root);\n\n    if (this.props.filter) {\n      root = this.buildSubTree(root) || root;\n    }\n\n    this.setClassName(root);\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(AnimatedTree, {\n        data: root,\n        height: this.props.height,\n        width: this.props.width,\n        gProps: {\n          className: 'node',\n          onClick: this.handleClick\n        },\n        textProps: {\n          dy: 3.5\n        },\n        steps: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nTreeContainer.propTypes = {\n  activeNode: PropTypes.string,\n  data: PropTypes.object,\n  filter: PropTypes.string,\n  height: PropTypes.number,\n  width: PropTypes.number\n};","map":{"version":3,"names":["clone","PropTypes","React","AnimatedTree","setActiveNode","TreeContainer","PureComponent","handleClick","event","node","getRoot","json","name","props","activeNode","i","children","length","childJson","buildSubTree","root","newChildren","child","push","toLowerCase","indexOf","filter","setClassName","forEach","className","render","data","height","width","onClick","dy","propTypes","string","object","number"],"sources":["/home/r/ideaproject/react/r-site/src/components/Product/index.js"],"sourcesContent":["import clone from 'clone';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AnimatedTree } from 'react-tree-graph';\nimport { setActiveNode } from '../Reducers/actions';\n\nexport default class TreeContainer extends React.PureComponent {\n    static propTypes = {\n        activeNode: PropTypes.string,\n        data: PropTypes.object,\n        filter: PropTypes.string,\n        height: PropTypes.number,\n        width: PropTypes.number\n    };\n\n    handleClick(event, node) {\n        setActiveNode(node);\n    }\n\n    getRoot(json) {\n        if (json.name === this.props.activeNode) {\n            return json;\n        }\n\n        for (let i = 0; i < json.children?.length; i++) {\n            const childJson = this.getRoot(json.children[i]);\n            if (childJson) {\n                return childJson;\n            }\n        }\n\n        return false;\n    }\n\n    buildSubTree(root) {\n        let newChildren = [];\n\n        for (let i = 0; i < root.children?.length; i++) {\n            const child = this.buildSubTree(root.children[i]);\n            if (child) {\n                newChildren.push(child);\n            }\n        }\n\n        if (newChildren.length > 0) {\n            root.children = newChildren;\n        }\n\n        if (newChildren.length > 0 || root.name.toLowerCase().indexOf(this.props.filter.toLowerCase()) !== -1) {\n            return root;\n        }\n\n        return null;\n    }\n\n    setClassName(node) {\n        node.children?.forEach(this.setClassName, this);\n\n        if (!this.props.filter) {\n            return;\n        }\n\n        node.className = node.name.toLowerCase().indexOf(this.props.filter) === -1\n            ? 'node searchExcluded'\n            : 'node searchIncluded';\n    }\n\n    render() {\n        let root = this.props.activeNode ? this.getRoot(this.props.data) : this.props.data;\n\n        root = clone(root);\n\n        if (this.props.filter) {\n            root = this.buildSubTree(root) || root;\n        }\n\n        this.setClassName(root);\n\n        return (\n            <main>\n                <AnimatedTree\n                    data={root}\n                    height={this.props.height}\n                    width={this.props.width}\n                    gProps={{\n                        className: 'node',\n                        onClick: this.handleClick\n                    }}\n                    textProps={{\n                        dy: 3.5\n                    }}\n                    steps={30}/>\n            </main>\n        );\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}